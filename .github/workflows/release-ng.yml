on:
  pull_request:
    branches:
      - 'main'
    types: [closed]
    paths:
      - 'libs/angular-components/CHANGELOG.md'

name: Create Angular release

jobs:
  build:
    name: Test and build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NX Setup
        shell: bash
        run: |
          git fetch origin main
          git checkout -qf FETCH_HEAD
        # Setup
      - name: Install Dependencies
        run: npm ci --loglevel=error
      - name: Build DevKit
        run: npm run build:devkit
        # Test
      - name: Content list
        uses: enricomarino/actions@v2
      - name: Lint affected files
        run: npm run affected:lint -- --base=origin/main --parallel
      - name: Check formatting
        run: npm run format:check -- --base=origin/main --parallel
      - name: Run affected unit tests
        run: npm run affected:test -- --base=origin/main --parallel

        # Angular Build
      - name: Build Test App
        run: npm run build -- --prod
      - name: Build Angular Theme
        run: npm run build angular-theme -- --prod
      - name: Build Angular Components
        run: npm run build angular-components
      - name: Upload Angular Theme Artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'angular-theme'
          path: './libs/angular-theme'
      - name: Upload Angular Components Artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'angular-components'
          path: './dist/libs/angular-components'
      - name: Upload Angular Test App Artifact
        uses: actions/upload-artifact@v3
        with:
          name: 'angular-app'
          path: './dist/apps/angular-test-app'

  release:
    needs: build
    name: Create GH Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.head_ref }}
          release_name: Release ${{ github.head_ref }}
          draft: false

  publish:
    needs: build
    name: Publish artifacts to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: 'angular-theme'
          path: './libs/angular-theme'
      - uses: actions/download-artifact@v3
        with:
          name: 'angular-components'
          path: './dist/libs/angular-components'
      - name: Publish Angular Components
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.FINASTRA_BOT_NPM_AUTH_TOKEN }}
          package: ./dist/libs/angular-components/package.json
          access: public
      - name: Publish Angular Theme
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.FINASTRA_BOT_NPM_AUTH_TOKEN }}
          package: ./libs/angular-theme/package.json
          access: public

  deploy:
    needs: build
    name: Deploy angular-test-app to Netlify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: 'angular-app'
          path: './dist/apps/angular-test-app'
      - name: Deploy angular app to Netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './dist/apps/angular-test-app'
          production-branch: main
          production-deploy: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: 'Deploy from GitHub Actions'
          github-deployment-environment: angular-release
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
